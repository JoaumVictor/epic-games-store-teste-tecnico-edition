import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import helmet from 'helmet';
import rateLimit from 'express-rate-limit';
import { WINSTON_MODULE_NEST_PROVIDER } from 'nest-winston';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  app.use(helmet());

  app.enableCors({
    origin: 'http://localhost:3001',
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
    credentials: true,
  });

  // --- Seguran√ßa: Rate Limiting ---
  app.use(
    rateLimit({
      windowMs: 1 * 60 * 1000,
      max: 100,
      message: 'Muitas requisi√ß√µes deste IP, tente novamente ap√≥s 1 minuto.',
    }),
  );

  // --- Logs: Configura√ß√£o do Winston ---
  app.useLogger(app.get(WINSTON_MODULE_NEST_PROVIDER));

  // --- Valida√ß√£o Global de DTOs ---
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
    }),
  );

  // --- Configura√ß√£o do Swagger ---
  const config = new DocumentBuilder()
    .setTitle('Epic Games Store - Teste T√©cnico Edition API') // T√≠tulo da sua API
    .setDescription(
      'Documenta√ß√£o da API do backend da Epic Games Store - Teste T√©cnico Edition',
    ) // Descri√ß√£o da API
    .setVersion('1.0') // Vers√£o da API
    .addTag('games', 'Opera√ß√µes relacionadas a jogos') // Adiciona tags para organizar os endpoints
    .addTag('users', 'Opera√ß√µes relacionadas a usu√°rios')
    .addTag('transactions', 'Opera√ß√µes relacionadas a transa√ß√µes de compra')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api-docs', app, document); // 'api-docs' √© a URL onde o Swagger UI estar√° dispon√≠vel

  const port = process.env.PORT || 3000;
  await app.listen(port);
  console.log(`üöÄ Aplica√ß√£o rodando na porta ${port}`);
}
bootstrap();
